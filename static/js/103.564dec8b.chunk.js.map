{"version":3,"file":"static/js/103.564dec8b.chunk.js","mappings":"sNAeA,MAAMA,EAA+B,CACnC,CACEC,GAAI,EACJC,SAAU,2DACVC,OAAQ,gIAEV,CACEF,GAAI,EACJC,SAAU,2DACVC,OAAQ,gIAEV,CACEF,GAAI,EACJC,SAAU,2DACVC,OAAQ,gIAEV,CACEF,GAAI,EACJC,SAAU,2DACVC,OAAQ,gIAEV,CACEF,GAAI,EACJC,SAAU,2DACVC,OAAQ,iIAwCZ,EApC8CC,IAAwB,IAAvB,UAAEC,EAAS,GAAEC,GAAIF,EAC9D,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,WAAyB,GAOzD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACL,GAAI,CAAEM,EAAG,KAAMN,EAAIO,SAAU,SAAWC,QAAS,OAAQC,WAAY,SAAUC,cAAe,UAAWC,SAAA,EAC5GC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,+BAGrCjB,EAASsB,KAAKC,IACbb,SAAAA,EAAAA,MAACc,EAAAA,EAAS,CACRlB,GAAI,CAAEmB,MAAO,OAAQC,gBAAiB,qBAAsBC,aAAc,OAAQC,GAAI,GAEtFrB,SAAUA,IAAc,QAAOgB,EAAKtB,KACpC4B,UAdLC,EAc6B,QAAOP,EAAKtB,KAdvB,CAAC8B,EAA6BC,KAC/CxB,IAAYwB,GAAaF,EAAc,GAaOb,SAAA,EAE1CC,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACfC,YAAYhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAlB,UAACC,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,MAChC,gBAAgB,QAAOb,EAAKtB,cAC5BA,GAAK,QAAOsB,EAAKtB,aAAagB,UAE9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAEM,EAAKrB,cAEpBgB,EAAAA,EAAAA,KAACmB,EAAAA,EAAgB,CAAApB,UACfC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAEM,EAAKpB,aAZfoB,EAAKtB,IAZf6B,KA2BE,MACG,E,0ECnEV,MAAMQ,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,KAAM,CACJC,SAAU,WACV5B,SAAU,SACV6B,OAAQ,QACR,YAAa,CACXC,QAAS,KACTF,SAAU,WACVG,IAAK,EACLC,KAAM,EACNC,gBAAiB,8BACjBC,eAAgB,QAChBC,UAAW,iBACXvB,MAAO,OACPiB,OAAQ,OACRf,aAAc,WA2BdsB,EAAyC,CAC7C,CAAEC,MAAO,WAAYC,KAAM,aAC3B,CAAED,MAAO,eAAgBC,KAAM,kBAQ3BC,EAA6B,CACjCC,KAAM,CACJ3B,gBAAiB,UACjB4B,MAAO,QACP7B,MAAO,QACPiB,OAAQ,OACRa,SAAU,OACVC,OAAQ,kBACR,UAAW,CACT9B,gBAAiB,YAGrB+B,OAAQ,CACNhC,MAAO,OACPiB,OAAQ,OACRa,SAAU,OACVG,aAAc,QAuBZC,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAaxD,IAAA,IAAC,MAAE0D,GAAO1D,EAAA,MAAM,CAC/CsB,gBAAiB,qBACjB4B,MAAO,UACPxC,QAAS,OACT4B,OAAQ,QACRf,aAAc,OACdoC,UAAW,4BACXC,WAAY,6BACZ,UAAW,CACPhB,UAAW,eAEhB,IAEKiB,GAAcL,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAaM,IAAA,IAAC,MAAEJ,GAAOI,EAAA,MAAM,CAC/CxC,gBAAiB,UACjB4B,MAAO,UACPxC,QAAS,OACT4B,OAAQ,QACRf,aAAc,OACdoC,UAAW,4BACXC,WAAY,6BACZ,UAAW,CACPhB,UAAW,eAEhB,IAEKmB,EAAiCC,IAA6B,IAA5B,MAAEC,EAAK,YAAEC,GAAaF,EAC5D,OACElD,EAAAA,EAAAA,KAACyC,EAAW,CAAA1C,UACVP,EAAAA,EAAAA,MAAC6D,EAAAA,EAAW,CAAAtD,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKoD,UAAU,MAAMlE,GAAI,CAAEmE,WAAY,OAAQf,aAAc,MAAOgB,UAAW,UAAWzD,SAC3GoD,KAEHnD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQd,GAAI,CAAEoE,UAAW,UAAWzD,SACrDqD,QAGO,EAIZK,GAAkBf,EAAAA,EAAAA,GAAOjD,EAAAA,EAAPiD,CAAY,CAClClC,gBAAiB,UACjBC,aAAc,OACdiD,QAAS,OACT9D,QAAS,OACTC,WAAY,SACZ8D,eAAgB,kBAGZC,GAAelB,EAAAA,EAAAA,GAAOmB,EAAAA,EAAPnB,CAAe,CAClClC,gBAAiB,UACjB4B,MAAO,OACP0B,YAAa,OACb,UAAW,CACPtD,gBAAiB,2BACjBsD,YAAa,UAIbC,EAAiCC,IAA6B,IAA5B,MAAEb,EAAK,YAAEC,GAAaY,EAC5D,OACEhE,EAAAA,EAAAA,KAAC+C,EAAW,CAAAhD,UACVP,EAAAA,EAAAA,MAAC6D,EAAAA,EAAW,CAACY,MAAO,CAACrE,QAAS,OAAQC,WAAY,SAAUC,cAAe,SAAU6D,eAAgB,UAAU5D,SAAA,EAC7GC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKoD,UAAU,MAAMlE,GAAI,CAAEmE,WAAY,OAAQf,aAAc,MAAOgB,UAAW,UAAWzD,SAC3GoD,KAEHnD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQd,GAAI,CAAEoE,UAAW,UAAWzD,SACrDqD,QAGO,EA8GlB,EAzGgDc,IAAwB,IAAvB,UAAE/E,EAAS,GAAEC,GAAI8E,EAuBhD9C,IAtBhB,MAuBM+C,GAAyBC,EAAAA,EAAAA,IAAexB,GAAiBA,EAAMyB,YAAYC,KAAK,QAetF,OACE9E,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACL,GAAI,CAAEmF,GAAI,EAAGnC,MAAO,QAASxC,QAAS,OAAQE,cAAe,SAAUD,WAAY,YAAaT,GAAKW,SAAA,EACxGP,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACL,GAAI,CAAEO,SAAU,QAASC,QAAS,OAAQE,cAAe,SAAUD,WAAY,UAAUE,SAAA,EAC5FC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgE,MAAO,CAAE5B,SAAU8B,EAAgB,OAAS,OAAQX,UAAW,UAAWrD,cAAY,EAAAJ,SAAC,oDAGnGC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgE,MAAO,CAAE5B,SAAU8B,EAAgB,OAAS,OAAQX,UAAW,UAAUzD,SAAC,4EAItFC,EAAAA,EAAAA,KAACP,EAAAA,EAAG,CAACL,GAAI,CACPQ,QAAS,OACTE,cAAeqE,EAAgB,SAAW,MAC1CK,IAAKL,EAAgB,EAAI,EACzBR,eAAgB,SAChBjD,GAAIyD,EAAgB,EAAI,EACxB5D,MAAO4D,EAAgB,OAAS,OAChCM,GAAIN,EAAgB,EAAI,GACxBpE,SACCgC,EAAc3B,KAAKsE,IAClB1E,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CAEL3D,QAAQ,YACR+B,KAAMyC,EAAOzC,KACb7C,GA9BK+E,EACX,IAAKjC,EAAaC,QAASD,EAAaK,QACxCL,EAAaC,KA4BepC,SAErB2E,EAAO1C,OALH0C,EAAO1C,eAUpBxC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACL,GAAI,CAAEQ,QAAS,OAAQE,cAAe,SAAUD,WAAY,SAAU8E,GAAI,GAAG5E,SAAA,EAChFC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgE,MAAO,CAAE5B,SAAU,OAAQkB,WAAY,MAAOqB,WAAY,SAAUC,WAAY,OAAQlF,SAAU,QAAS6D,UAAW,UAAUzD,SAAC,oEAG7IC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgE,MAAO,CAAE5B,SAAU,OAAQkB,WAAY,MAAO5D,SAAU,SAAUiF,WAAY,SAAUC,WAAY,OAAQrB,UAAW,SAAUsB,UAAW,IAAI/E,SAAC,gKAK/JC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG7F,GAAI,CAAEsE,QAAS,QAAS3D,SA9EpC,CAClB,CACEoD,MAAO,uBACPC,YAAa,uOACb8B,OAAQ,IAEV,CACE/B,MAAO,mBACPC,YAAa,sIACb8B,OAAQ,KAEV,CACE/B,MAAO,kBACPC,YAAa,sEACb8B,OAAQ,MAiEO9E,KAAI,CAAC+E,EAAMC,KACtBpF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAAC1E,MAAI,EAACgF,GAAI,GAAIC,GAAgB,GAAZH,EAAKD,OAAWK,GAAgB,GAAZJ,EAAKD,OAAUnF,UACxDC,EAAAA,EAAAA,KAACiD,EAAS,CAACE,MAAOgC,EAAKhC,MAAOC,YAAa+B,EAAK/B,eADcgC,QAKpEpF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG7F,GAAI,CAAEsE,QAAS,QAAS3D,SApExC,CAChB,CAAEoD,MAAO,yBAA0BC,YAAa,gGAAiG8B,OAAQ,KACvJ,CAAE/B,MAAO,wBAAyBC,YAAa,6EAA8E8B,OAAQ,KACrI,CAAE/B,MAAO,yBAA0BC,YAAa,uFAAwF8B,OAAQ,KAkEjI9E,KAAI,CAAC+E,EAAMC,KACpBpF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAAC1E,MAAI,EAACgF,GAAI,GAAIC,GAAgB,GAAZH,EAAKD,OAAWK,GAAgB,GAAZJ,EAAKD,OAAUnF,UACxDC,EAAAA,EAAAA,KAAC+D,EAAS,CAACZ,MAAOgC,EAAKhC,MAAOC,YAAa+B,EAAK/B,eADcgC,QAKpEpF,EAAAA,EAAAA,KAACP,EAAAA,EAAG,CAACL,GAAI,CAAEmB,MAAO,OAAQb,EAAG,EAAGC,SAAU,UAAUI,UAClDP,EAAAA,EAAAA,MAACiE,EAAe,CAAA1D,SAAA,EACdC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAK+D,MAAO,CAAE7B,MAAO,QAASrC,SAAC,wCAGnDC,EAAAA,EAAAA,KAAC4D,EAAY,CAAC1D,QAAQ,WAAUH,SAAC,0BAGjC,ECpQV,EATuByF,KAEnBhG,EAAAA,EAAAA,MAAAiG,EAAAA,SAAA,CAAA1F,SAAA,EACEC,EAAAA,EAAAA,KAAC0F,EAAW,KACZ1F,EAAAA,EAAAA,KAAC2F,EAAU,M","sources":["components/dashboard/FAQSection.tsx","components/dashboard/MainSection.tsx","pages/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, Accordion, AccordionSummary, AccordionDetails, IconButton, SxProps, Theme } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\ninterface FAQSectionProps {\r\n  className?: string;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\ninterface FAQItem {\r\n  id: number;\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\nconst faqItems: readonly FAQItem[] = [\r\n  {\r\n    id: 1,\r\n    question: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    answer: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    answer: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    answer: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    answer: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    answer: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\r\n  }\r\n] as const;\r\n\r\nconst FAQSection: React.FC<FAQSectionProps> = ({ className, sx }) => {\r\n  const [expanded, setExpanded] = useState<string | false>(false);\r\n\r\n  const handleChange = \r\n    (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean): void => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n  return (\r\n    <Box sx={{ p: 3, ...sx, maxWidth: '1100px',  display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Frequently Asked Questions\r\n      </Typography>\r\n      {faqItems.map((item) => (\r\n        <Accordion \r\n          sx={{ width: '100%', backgroundColor: 'rgba(51,30,34,0.8)', borderRadius: '12px', my: 1, }}\r\n          key={item.id} \r\n          expanded={expanded === `panel${item.id}`} \r\n          onChange={handleChange(`panel${item.id}`)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<IconButton><AddIcon /></IconButton>}\r\n            aria-controls={`panel${item.id}a-content`}\r\n            id={`panel${item.id}a-header`}\r\n          >\r\n            <Typography>{item.question}</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>{item.answer}</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FAQSection;\r\n","import React from 'react';\r\nimport { Box, Typography, Button, Grid, useMediaQuery, AppBarProps, Theme, SxProps } from '@mui/material';\r\nimport { AppBar } from '@mui/material';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Card, CardContent} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n    maxWidth: '1100px', \r\n    height: '500px', \r\n    '&::before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      backgroundImage: 'url(./assets/images/bg.png)', \r\n      backgroundSize: 'cover',\r\n      transform: 'rotate(180deg)',\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50px',\r\n    }\r\n  }\r\n})\r\n\r\ntype CustomAppBarProps = AppBarProps & {\r\n  customBgColor?: string;\r\n  customShadow?: string;\r\n  customPadding?: number;\r\n};\r\n\r\ninterface MainSectionProps {\r\n  className?: string;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\ninterface ActionButton {\r\n  label: string;\r\n  href: string;\r\n}\r\n\r\nconst defaultAppBarStyles: SxProps<Theme> = {\r\n  bgcolor: 'transparent',\r\n  boxShadow: 'none',\r\n  py: 2,\r\n};\r\n\r\nconst actionButtons: readonly ActionButton[] = [\r\n  { label: 'CPU4SALE', href: '/cpu4sale' },\r\n  { label: 'LIMITLESSWAX', href: '/limitlesswax' }\r\n] as const;\r\n\r\ninterface ButtonStyles {\r\n  base: SxProps<Theme>;\r\n  mobile: SxProps<Theme>;\r\n}\r\n\r\nconst buttonStyles: ButtonStyles = {\r\n  base: {\r\n    backgroundColor: '#882140',\r\n    color: 'white',\r\n    width: '240px',\r\n    height: '60px',\r\n    fontSize: '24px',\r\n    border: '1px solid white',\r\n    '&:hover': {\r\n      backgroundColor: '#6d1a33'\r\n    }\r\n  },\r\n  mobile: {\r\n    width: '100%',\r\n    height: '50px',\r\n    fontSize: '18px',\r\n    marginBottom: '8px'\r\n  }\r\n};\r\n\r\ninterface SideProps {\r\n  src?: string;\r\n  alt?: string;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst defaultSideProps: SideProps = {\r\n  src: './assets/images/side.png',\r\n  alt: 'Side',\r\n  height: 500\r\n};\r\n\r\n\r\ninterface CardProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nconst StyledCard1 = styled(Card)(({ theme }) => ({\r\n  backgroundColor: 'rgba(51,30,34,0.8)',\r\n  color: '#FFFFFF',\r\n  display: 'flex',\r\n  height: '160px',\r\n  borderRadius: '12px',\r\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\r\n  transition: 'transform 0.3s ease-in-out',\r\n  '&:hover': {\r\n      transform: 'scale(1.05)',\r\n  },\r\n}));\r\n\r\nconst StyledCard2 = styled(Card)(({ theme }) => ({\r\n  backgroundColor: '#4A1E2A',\r\n  color: '#FFFFFF',\r\n  display: 'flex',\r\n  height: '300px',\r\n  borderRadius: '12px',\r\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\r\n  transition: 'transform 0.3s ease-in-out',\r\n  '&:hover': {\r\n      transform: 'scale(1.05)',\r\n  },\r\n}));\r\n\r\nconst InfoCard1: React.FC<CardProps> = ({ title, description }) => {\r\n  return (\r\n    <StyledCard1>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 'bold', marginBottom: '8px', textAlign: 'center' }}>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </StyledCard1>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled(Box)({\r\n  backgroundColor: '#331E22',\r\n  borderRadius: '24px',\r\n  padding: '24px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n});\r\n\r\nconst StyledButton = styled(Button)({\r\n  backgroundColor: \"#882140\",\r\n  color: '#fff',\r\n  borderColor: '#fff',\r\n  '&:hover': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n      borderColor: '#fff',\r\n  },\r\n});\r\n\r\nconst InfoCard2: React.FC<CardProps> = ({ title, description }) => {\r\n  return (\r\n    <StyledCard2>\r\n      <CardContent style={{display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center'}}>\r\n        <Typography variant=\"h4\" component=\"div\" sx={{ fontWeight: 'bold', marginBottom: '8px', textAlign: 'center' }}>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </StyledCard2>\r\n  );\r\n};\r\n\r\n\r\nconst MainSection: React.FC<MainSectionProps> = ({ className, sx }) => {\r\n  const cards_brown = [\r\n    {\r\n      title: 'Request CPU for Self',\r\n      description: 'The system dynamically creates a price for the staked wax given the current supply, total loaned out, number of days, and amount user requests. Then that wax is sent to a minion account and staked to the user for the given time.',\r\n      weight: 0.5,\r\n    },\r\n    {\r\n      title: 'Request Free CPU',\r\n      description: 'As long as this account has wax it will send in a specified amount to the main contract requesting cpu as if it was a regular user.',\r\n      weight: 0.25,\r\n    },\r\n    {\r\n      title: 'Deposit to Earn',\r\n      description: 'Users can also deposit wax to earn 70% of the total fees collected.',\r\n      weight: 0.25,\r\n    },\r\n];\r\nconst cards_red = [\r\n  { title: 'Request CPU for Others', description: 'Similar to requesting for yourself, this does the first few steps but then directly stakes...', weight: 0.25 },\r\n    { title: 'Update Collected Fees', description: 'This method is not required but will immediately update the table entry...', weight: 0.25 },\r\n    { title: 'Withdraw Deposited Wax', description: 'At any time a user can request to withdraw deposited wax. A user can make as many...', weight: 0.5 },\r\n];\r\n  const classes = useStyles()\r\n  const isSmallScreen: boolean = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'));\r\n\r\n  const appBarProps: CustomAppBarProps = {\r\n    position: \"static\",\r\n    component: \"nav\",\r\n    elevation: 0,\r\n  };\r\n\r\n  const getButtonStyles = (): SxProps<Theme> => {\r\n    const styles = isSmallScreen \r\n      ? { ...buttonStyles.base, ...buttonStyles.mobile }\r\n      : buttonStyles.base;\r\n    return styles as SxProps<Theme>;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ py: 4, color: 'white', display: 'flex', flexDirection: 'column', alignItems: 'center', ...sx }}>\r\n      <Box sx={{ maxWidth: '739px', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <Typography style={{ fontSize: isSmallScreen ? '36px' : '48px', textAlign: 'center'}} gutterBottom>\r\n          A new CPU renting system on the WAX blockchain\r\n        </Typography>\r\n        <Typography style={{ fontSize: isSmallScreen ? '16px' : '24px', textAlign: 'center'}}>\r\n          Created with help from the WAX development team and community members.\r\n        </Typography>\r\n\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          flexDirection: isSmallScreen ? 'column' : 'row',\r\n          gap: isSmallScreen ? 1 : 2, \r\n          justifyContent: 'center', \r\n          my: isSmallScreen ? 1 : 4,\r\n          width: isSmallScreen ? '100%' : 'auto',\r\n          px: isSmallScreen ? 2 : 0\r\n        }}>\r\n          {actionButtons.map((button) => (\r\n            <Button\r\n              key={button.label}\r\n              variant=\"contained\"\r\n              href={button.href}\r\n              sx={getButtonStyles()}\r\n            >\r\n              {button.label}\r\n            </Button>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 4}}>\r\n        <Typography style={{ fontSize: '36px', fontWeight: '700', fontFamily: 'Roboto', lineHeight: '100%', maxWidth: '860px', textAlign: 'center'}}>\r\n          Users can interact with the smart contract in a number of ways\r\n        </Typography>\r\n        <Typography style={{ fontSize: '24px', fontWeight: '300', maxWidth: '1000px', fontFamily: 'Roboto', lineHeight: '100%', textAlign: 'center', marginTop: 16}}>\r\n          The system will be open for 1 week before allowing users to deposit their own wax to earn. If users find bugs there is a bug bounty program on discord.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Grid container spacing={3} sx={{ padding: '24px' }}>\r\n        {cards_brown.map((card, index) => (\r\n          <Grid item xs={12} sm={card.weight*24} md={card.weight*12} key={index}>\r\n            <InfoCard1 title={card.title} description={card.description} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid container spacing={3} sx={{ padding: '24px' }}>\r\n        {cards_red.map((card, index) => (\r\n          <Grid item xs={12} sm={card.weight*24} md={card.weight*12} key={index}>\r\n            <InfoCard2 title={card.title} description={card.description} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Box sx={{ width: '100%', p: 3, maxWidth: '1100px'}}>\r\n        <StyledContainer>\r\n          <Typography variant=\"h6\" style={{ color: '#fff' }}>\r\n            Stay up to date with Limitless WAX\r\n          </Typography>\r\n          <StyledButton variant=\"outlined\">Join Community</StyledButton>\r\n        </StyledContainer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainSection;","import React from \"react\";\r\n\r\n// components\r\nimport Header from \"../components/Header\";\r\nimport FAQSection from \"../components/dashboard/FAQSection\";\r\nimport MainSection from \"../components/dashboard/MainSection\";\r\n\r\nconst Home: React.FC = () =>{\r\n  return (\r\n    <>\r\n      <MainSection />\r\n      <FAQSection />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["faqItems","id","question","answer","_ref","className","sx","expanded","setExpanded","useState","_jsxs","Box","p","maxWidth","display","alignItems","flexDirection","children","_jsx","Typography","variant","gutterBottom","map","item","Accordion","width","backgroundColor","borderRadius","my","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","IconButton","AddIcon","AccordionDetails","useStyles","makeStyles","root","position","height","content","top","left","backgroundImage","backgroundSize","transform","actionButtons","label","href","buttonStyles","base","color","fontSize","border","mobile","marginBottom","StyledCard1","styled","Card","theme","boxShadow","transition","StyledCard2","_ref2","InfoCard1","_ref3","title","description","CardContent","component","fontWeight","textAlign","StyledContainer","padding","justifyContent","StyledButton","Button","borderColor","InfoCard2","_ref4","style","_ref5","isSmallScreen","useMediaQuery","breakpoints","down","py","gap","px","button","mt","fontFamily","lineHeight","marginTop","Grid","container","spacing","weight","card","index","xs","sm","md","Home","_Fragment","MainSection","FAQSection"],"sourceRoot":""}