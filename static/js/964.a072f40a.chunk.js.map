{"version":3,"file":"static/js/964.a072f40a.chunk.js","mappings":"4MAGA,MAyGA,EAzG8BA,KAC5B,MAAMC,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAClDC,GAAgBH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,QAAQ,KAAM,OAEpE,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAeV,EAAa,SAAW,MACvCW,WAAY,SACZC,eAAgB,gBAChBC,QAASb,EAAa,EAAII,EAAgB,EAAI,EAC9CU,aAAc,EACdC,OAAQ,SACRC,IAAKhB,GAAiBI,EAAJ,EAAwB,GAC1Ca,SAAA,EAEFX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTE,WAAY,SACZO,MAAOlB,EAAa,OAAS,QAC7BiB,SAAA,EACAE,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CACFC,GAAI,CACFU,MAAOlB,EAAa,OAASI,EAAgB,QAAU,IACvDgB,OAAQpB,EAAa,OAASI,EAAgB,QAAU,IACxDU,aAAc,MACdO,QAAS,eACTC,WAAY,MAGhBH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTf,GAAI,CACFgB,SAAUxB,EAAa,SAAWI,EAAgB,SAAW,GAC7DqB,GAAIzB,EAAa,IAAM,QAEzB0B,MAAM,OAAMT,SACb,kBAKHX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTO,IAAKhB,EAAa,EAAI,EACtBkB,MAAOlB,EAAa,OAAS,QAC7BiB,SAAA,EACAE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACnB,GAAI,CACRoB,KAAM5B,EAAa,EAAI,OACvBkB,MAAOd,EAAgB,IAAM,IAC7BiB,QAAS,UACTQ,MAAO,QACPf,aAAcd,EAAa,OAASI,EAAgB,OAAS,QAC7Da,UACAX,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAACtB,GAAI,CACfuB,EAAG/B,EAAa,IAAMI,EAAgB,KAAO,EAC7C,eAAgB,CAAE4B,GAAIhC,EAAa,IAAMI,EAAgB,KAAO,IAChEa,SAAA,EACAX,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACf,GAAI,CACdgB,SAAUxB,EAAa,SAAWI,EAAgB,SAAW,GAC7D6B,GAAI,IACHC,cAAY,EAAAjB,SAAA,CAAC,aAEdE,EAAAA,EAAAA,KAAA,SAAM,eAGRA,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAI,CACdgB,SAAUxB,EAAa,OAASI,EAAgB,SAAW,IAC1D+B,UAAU,MAAKlB,SAAC,qBAKvBE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACnB,GAAI,CACRoB,KAAM5B,EAAa,EAAI,OACvBkB,MAAOd,EAAgB,IAAM,IAC7BiB,QAAS,UACTQ,MAAO,QACPf,aAAcd,EAAa,OAASI,EAAgB,OAAS,QAC7Da,UACAX,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAACtB,GAAI,CACfuB,EAAG/B,EAAa,IAAMI,EAAgB,KAAO,EAC7C,eAAgB,CAAE4B,GAAIhC,EAAa,IAAMI,EAAgB,KAAO,IAChEa,SAAA,EACAX,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACf,GAAI,CACdgB,SAAUxB,EAAa,SAAWI,EAAgB,SAAW,GAC7D6B,GAAI,IACHC,cAAY,EAAAjB,SAAA,CAAC,aAEdE,EAAAA,EAAAA,KAAA,SAAM,eAGRA,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAI,CACdgB,SAAUxB,EAAa,OAASI,EAAgB,SAAW,IAC1D+B,UAAU,MAAKlB,SAAC,yBAMrB,ECrDV,EAzC0CmB,IAAwB,IAAvB,MAAEC,EAAK,MAAEC,GAAQF,EAC1D,MAAMtC,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAClDC,GAAgBH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,QAAQ,KAAM,OAEpE,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPa,QAAS,mBACTQ,MAAO,QACPf,aAAcd,EAAa,OAASI,EAAgB,OAAS,OAC7DgB,OAAQpB,EAAa,OAASI,EAAgB,IAAM,IACpDK,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZD,cAAe,SACfqB,EAAG/B,EAAa,EAAII,EAAgB,IAAM,GAC1Ca,SAAA,EACAE,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTY,UAAU,MACV3B,GAAI,CACFyB,GAAIjC,EAAa,GAAM,EACvBuC,UAAW,SACXf,SAAUxB,GAAkBI,EAAL,GAA0B,GACjDoC,WAAY,KACZvB,SAEDoB,KAEHlB,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTf,GAAI,CACF+B,UAAW,SACXf,SAAUxB,EAAa,GAAKI,EAAgB,GAAK,GACjDoC,WAAY,KACZvB,SAEDqB,MAEC,ECVV,EA9B8CF,IAAgB,IAAf,MAAEC,GAAOD,EACtD,MAAMtC,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAClDC,GAAgBH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,QAAQ,KAAM,OAEpE,OACEc,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACC,GAAI,CACPiC,gBAAiB,UACjBZ,MAAO,eACPT,OAAQpB,EAAa,GAAKI,EAAgB,GAAK,IAC/CU,aAAcd,EAAa,OAASI,EAAgB,OAAS,OAC7DK,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZoB,EAAG/B,EAAa,EAAII,EAAgB,IAAM,KAC1Ca,UACAE,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTY,UAAU,MACV3B,GAAI,CACF+B,UAAW,SACXf,SAAUxB,GAAkBI,EAAL,GAA0B,GACjDoC,WAAY,KACZvB,SAEDoB,KAEC,ECvBJK,EAAuB,CAC3B,CAAEL,MAAO,iBAAkBC,MAAO,WAClC,CAAED,MAAO,iBAAkBC,MAAO,WAClC,CAAED,MAAO,iBAAkBC,MAAO,WAClC,CAAED,MAAO,iBAAkBC,MAAO,YA8EpC,EA3EoBK,KAClB,MAAM7C,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAClDC,GAAgBH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,QAAQ,KAAM,OAE9DuC,EAA2B,CAC/BnC,QAAS,OACTC,cAAeV,EAAa,SAAW,MACvCY,eAAgB,gBAChBmB,EAAG/B,EAAa,EAAII,EAAgB,IAAM,EAC1CY,IAAKhB,EAAa,IAAMI,EAAgB,EAAI,GAGxCyC,EAAwB,CAC5BpC,QAAS,OACTC,cAAe,SACfQ,MAAOlB,EAAa,OAAS,MAC7BoB,OAAQpB,EAAa,OAASI,EAAgB,IAAM,IACpDY,IAAKhB,EAAa,EAAII,EAAgB,IAAM,GAGxC0C,EAAqC,CACzC1B,OAAQpB,EAAa,OAASI,EAAgB,IAAM,IACpDK,QAAS,OACTC,cAAe,SACfM,IAAKhB,EAAa,EAAII,EAAgB,IAAM,GAGxC2C,EAA0B,CAC9B1B,QAAS,UACTH,MAAOlB,EAAa,OAAS,MAC7B+B,EAAG/B,EAAa,EAAII,EAAgB,IAAM,EAC1CK,QAAS,OACTC,cAAe,SACfC,WAAY,SACZG,aAAcd,EAAa,OAASI,EAAgB,OAAS,OAC7DgB,OAAQpB,EAAa,OAASI,EAAgB,IAAM,OACpDY,IAAK,GAGDgC,EAAuB,CAC3BxB,SAAUxB,EAAa,OAASI,EAAgB,OAAS,QAGrD6C,EAAuB,CAC3BzB,SAAUxB,GAAsBI,EAAT,OAAkC,QAG3D,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAIoC,EAAgB3B,SAAA,EACvBX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAIqC,EAAa5B,SAAA,EACpBE,EAAAA,EAAAA,KAAC+B,EAAQ,CAACb,MAAM,gCAAgCC,MAAM,aACtDnB,EAAAA,EAAAA,KAAC+B,EAAQ,CAACb,MAAM,gCAAgCC,MAAM,gBAGxDhC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAIqC,EAAa5B,SAAA,EACpBX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAIsC,EAA0B7B,SAAA,EACjCE,EAAAA,EAAAA,KAACgC,EAAU,CAACd,MAAM,4BAClBlB,EAAAA,EAAAA,KAACgC,EAAU,CAACd,MAAM,+BAEpBlB,EAAAA,EAAAA,KAAC+B,EAAQ,CAACb,MAAM,wBAAwBC,MAAM,gBAGhDnB,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACC,GAAIuC,EAAe9B,SACrByB,EAASU,KAAI,CAACC,EAAMC,KACnBhD,EAAAA,EAAAA,MAACiD,EAAAA,SAAc,CAAAtC,SAAA,EACbE,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAIwC,EAAY/B,SAAEoC,EAAKhB,SACnClB,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAIyC,EAAYhC,SAAEoC,EAAKf,UAFhBgB,SAMrB,E,cChFV,MAAME,EAA8B,CAClC,CAAEC,KAAM,iBAAkBC,KAAM,aAChC,CAAED,KAAM,iBAAkBC,KAAM,cAyDlC,EAtDsBC,KACpB,MAAM7D,GAAQC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAClDC,GAAgBH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,QAAQ,KAAM,OAE9DuD,EAAwB,CAC5B1C,MAAOlB,EAAa,OAASI,EAAgB,IAAM,IACnDgB,OAAQpB,EAAa,GAAKI,EAAgB,IAAM,IAChDU,aAAcd,EAAa,OAASI,EAAgB,OAAS,OAC7DiB,QAAS,UACTZ,QAAS,OACTG,eAAgB,gBAChBiD,GAAI7D,EAAa,EAAII,EAAgB,EAAI,EACzC,UAAW,CACTiB,QAAS,YAIPyC,EAAsB,CAC1BjC,MAAO,QACPL,SAAUxB,EAAa,GAAKI,EAAgB,GAAK,IAG7C2D,EAAuB,CAC3BlC,MAAO,QACPL,SAAUxB,EAAa,GAAKI,EAAgB,GAAK,IAGnD,OACEe,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTC,cAAeV,EAAa,SAAW,MACvCY,eAAgB,gBAChBmB,EAAG/B,EAAa,EAAII,EAAgB,EAAI,EACxCY,IAAKhB,EAAa,EAAI,GACtBiB,SACCuC,EAAQJ,KAAI,CAACY,EAAQV,KACpBhD,EAAAA,EAAAA,MAAC2D,EAAAA,EAAM,CAELP,KAAMM,EAAON,KACblD,GAAIoD,EAAa3C,SAAA,EAEjBE,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAIsD,EAAW7C,SACxB+C,EAAOP,QAEVtC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACf,GAAIuD,EAAY9C,SAAC,QAPxBqC,MAYL,E,aC3DV,MAAMY,GAAaC,E,QAAAA,GAAOC,EAAAA,EAAPD,EAAa/B,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,MAAM,CAC9CP,MAAO,UACPwC,eAAgB,OAChBC,WAAY,SACb,IAyCD,EAvCiBC,KACf,MAAMC,GAAWvE,EAAAA,EAAAA,IAAeH,GAAiBA,EAAMI,YAAYC,KAAK,QAExE,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAe8D,EAAW,SAAW,MACrC7D,WAAY6D,EAAW,aAAe,SACtC5D,eAAgB,gBAChBC,QAAS2D,EAAW,EAAI,EACxB1D,aAAc,EACdC,OAAQ,SACRC,IAAKwD,EAAW,EAAI,GACpBvD,SAAA,EAEFE,EAAAA,EAAAA,KAAC+C,EAAU,CACTR,KAAK,IACLlD,GAAI,CACFgB,SAAUgD,EAAW,GAAK,GAC1BC,WAAY,IACZlC,UAAWiC,EAAW,OAAS,UAC/BvD,SACH,eAGDE,EAAAA,EAAAA,KAAC+C,EAAU,CACT1D,GAAI,CACFgB,SAAUgD,EAAW,GAAK,GAC1BC,WAAY,IACZlC,UAAWiC,EAAW,OAAS,UAC/BvD,SACH,2BAGG,EC5BV,EAX4ByD,KAExBpE,EAAAA,EAAAA,MAAAqE,EAAAA,SAAA,CAAA1D,SAAA,EACEE,EAAAA,EAAAA,KAACtB,EAAW,KACZsB,EAAAA,EAAAA,KAACoD,EAAQ,KACVpD,EAAAA,EAAAA,KAACwB,EAAW,KACXxB,EAAAA,EAAAA,KAACwC,EAAa,M,4GCVb,SAASiB,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,aCKrE,MASMC,GAAkBb,EAAAA,EAAAA,IAAO,MAAO,CACpCc,KAAM,iBACNJ,KAAM,OACNK,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHvBlB,CAIrB,CACDtD,QAAS,GACT,eAAgB,CACdyE,cAAe,MAqDnB,EAlDiC/B,EAAAA,YAAiB,SAAqBgC,EAASC,GAC9E,MAAML,GAAQM,EAAAA,EAAAA,GAAgB,CAC5BN,MAAOI,EACPN,KAAM,oBAEF,UACJS,EAAS,UACTvD,EAAY,SACTwD,GACDR,EACES,EAAa,IACdT,EACHhD,aAEI0D,EAjCkBD,KACxB,MAAM,QACJC,GACED,EAIJ,OAAOE,EAAAA,EAAAA,GAHO,CACZT,KAAM,CAAC,SAEoBT,EAA4BiB,EAAQ,EA0BjDE,CAAkBH,GAClC,OAAoBzE,EAAAA,EAAAA,KAAK6D,EAAiB,CACxCgB,GAAI7D,EACJuD,WAAWO,EAAAA,EAAAA,GAAKJ,EAAQR,KAAMK,GAC9BE,WAAYA,EACZJ,IAAKA,KACFG,GAEP,G,qHCjDO,SAASO,EAAoBrB,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,S,aCOvD,MASMoB,GAAWhC,EAAAA,EAAAA,IAAOiC,EAAAA,EAAO,CAC7BnB,KAAM,UACNJ,KAAM,OACNK,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH9BlB,CAId,CACDkC,SAAU,WAyDZ,EAvD0B9C,EAAAA,YAAiB,SAAcgC,EAASC,GAChE,MAAML,GAAQM,EAAAA,EAAAA,GAAgB,CAC5BN,MAAOI,EACPN,KAAM,aAEF,UACJS,EAAS,OACTY,GAAS,KACNX,GACDR,EACES,EAAa,IACdT,EACHmB,UAEIT,EA9BkBD,KACxB,MAAM,QACJC,GACED,EAIJ,OAAOE,EAAAA,EAAAA,GAHO,CACZT,KAAM,CAAC,SAEoBa,EAAqBL,EAAQ,EAuB1CE,CAAkBH,GAClC,OAAoBzE,EAAAA,EAAAA,KAAKgF,EAAU,CACjCT,WAAWO,EAAAA,EAAAA,GAAKJ,EAAQR,KAAMK,GAC9Ba,UAAWD,EAAS,OAAIE,EACxBhB,IAAKA,EACLI,WAAYA,KACTD,GAEP,G,mJChDO,SAASc,EAAqB5B,GACnC,OAAOC,EAAAA,EAAAA,IAAqB,WAAYD,EAC1C,EACqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,YAAa,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,gB,aCUnc,MAYM2B,GAAYvC,EAAAA,EAAAA,IAAO,MAAO,CAC9Bc,KAAM,WACNJ,KAAM,OACNK,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJQ,GACET,EACJ,MAAO,CAACC,EAAOC,KAAMD,EAAOQ,EAAWe,UAAWf,EAAWgB,QAAUxB,EAAOyB,QAAgC,cAAvBjB,EAAWe,SAA2BvB,EAAQ,YAAWQ,EAAWW,aAAa,GAP1JpC,EASf2C,EAAAA,EAAAA,IAAU1E,IAAA,IAAC,MACZtC,GACDsC,EAAA,MAAM,CACLK,iBAAkB3C,EAAMiH,MAAQjH,GAAOkH,QAAQC,WAAWC,MAC1DrF,OAAQ/B,EAAMiH,MAAQjH,GAAOkH,QAAQvD,KAAK0D,QAC1CC,WAAYtH,EAAMuH,YAAYC,OAAO,cACrCC,SAAU,CAAC,CACTpC,MAAOqC,IAAA,IAAC,WACN5B,GACD4B,EAAA,OAAM5B,EAAWgB,MAAM,EACxBa,MAAO,CACL3G,aAAchB,EAAM4H,MAAM5G,eAE3B,CACDqE,MAAO,CACLwB,QAAS,YAEXc,MAAO,CACLE,OAAS,cAAa7H,EAAMiH,MAAQjH,GAAOkH,QAAQY,YAEpD,CACDzC,MAAO,CACLwB,QAAS,aAEXc,MAAO,CACLI,UAAW,sBACXC,gBAAiB,0BAGtB,KAwGD,EAvG2BvE,EAAAA,YAAiB,SAAegC,EAASC,GAClE,MAAML,GAAQM,EAAAA,EAAAA,GAAgB,CAC5BN,MAAOI,EACPN,KAAM,aAEFnF,GAAQC,EAAAA,EAAAA,MACR,UACJ2F,EAAS,UACTvD,EAAY,MAAK,UACjBoE,EAAY,EAAC,OACbK,GAAS,EAAK,QACdD,EAAU,eACPhB,GACDR,EACES,EAAa,IACdT,EACHhD,YACAoE,YACAK,SACAD,WAEId,EAxEkBD,KACxB,MAAM,OACJgB,EAAM,UACNL,EAAS,QACTI,EAAO,QACPd,GACED,EACEmC,EAAQ,CACZ1C,KAAM,CAAC,OAAQsB,GAAUC,GAAU,UAAuB,cAAZD,GAA4B,YAAWJ,MAEvF,OAAOT,EAAAA,EAAAA,GAAeiC,EAAOtB,EAAsBZ,EAAQ,EA8D3CE,CAAkBH,GAMlC,OAAoBzE,EAAAA,EAAAA,KAAKuF,EAAW,CAClCV,GAAI7D,EACJyD,WAAYA,EACZF,WAAWO,EAAAA,EAAAA,GAAKJ,EAAQR,KAAMK,GAC9BF,IAAKA,KACFG,EACH8B,MAAO,IACW,cAAZd,GAA2B,CAC7B,kBAAmB7G,EAAMiH,MAAQjH,GAAOkI,QAAQzB,MAC5CzG,EAAMiH,MAAQ,CAChB,kBAAmBjH,EAAMiH,KAAKkB,WAAW1B,QAEtCzG,EAAMiH,MAA+B,SAAvBjH,EAAMkH,QAAQkB,MAAmB,CAClD,kBAAoB,oBAAkBC,EAAAA,EAAAA,IAAM,QAAQC,EAAAA,EAAAA,GAAgB7B,SAAgB4B,EAAAA,EAAAA,IAAM,QAAQC,EAAAA,EAAAA,GAAgB7B,YAGnHZ,EAAM8B,QAGf,G","sources":["components/account/Usersection.tsx","components/account/DataCard.tsx","components/account/SimpleCard.tsx","components/account/CardSection.tsx","components/account/ButtonSection.tsx","components/account/DashLink.tsx","pages/Account.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, useMediaQuery, useTheme, Card, CardContent } from '@mui/material';\n\nconst UserSection: React.FC = () => {\n  const theme = useTheme();\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const isSmallScreen = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: isXsScreen ? 'column' : 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: isXsScreen ? 1 : isSmallScreen ? 2 : 3,\n        borderRadius: 2,\n        margin: '0 auto',\n        gap: isXsScreen ? 2 : isSmallScreen ? 2 : 3\n      }}\n    >\n      <Box sx={{ \n        display: 'flex', \n        alignItems: 'center',\n        width: isXsScreen ? '100%' : 'auto'\n      }}>\n        <Box\n          sx={{\n            width: isXsScreen ? '60px' : isSmallScreen ? '100px' : 172,\n            height: isXsScreen ? '60px' : isSmallScreen ? '100px' : 172,\n            borderRadius: '50%',\n            bgcolor: 'primary.main',\n            flexShrink: 0\n          }}\n        />\n        <Typography \n          sx={{ \n            fontSize: isXsScreen ? '1.2rem' : isSmallScreen ? '1.8rem' : 48,\n            ml: isXsScreen ? 1.5 : \"20px\",\n          }} \n          align=\"left\"\n        >\n          ki.fg.wam\n        </Typography>\n      </Box>\n\n      <Box sx={{ \n        display: 'flex',\n        gap: isXsScreen ? 1 : 2,\n        width: isXsScreen ? '100%' : 'auto'\n      }}>\n        <Card sx={{ \n          flex: isXsScreen ? 1 : 'none',\n          width: isSmallScreen ? 160 : 120,\n          bgcolor: '#391E24', \n          color: \"white\", \n          borderRadius: isXsScreen ? \"12px\" : isSmallScreen ? \"16px\" : \"25px\",\n        }}>\n          <CardContent sx={{ \n            p: isXsScreen ? 1.5 : isSmallScreen ? 1.75 : 2,\n            '&:last-child': { pb: isXsScreen ? 1.5 : isSmallScreen ? 1.75 : 2 }\n          }}>\n            <Typography sx={{ \n              fontSize: isXsScreen ? '0.9rem' : isSmallScreen ? '1.1rem' : 26,\n              mb: 0.5\n            }} gutterBottom>\n              Total WAX\n              <br />\n              Balance:\n            </Typography>\n            <Typography sx={{ \n              fontSize: isXsScreen ? '1rem' : isSmallScreen ? '1.2rem' : 26\n            }} component=\"div\">\n              6.12354672\n            </Typography>\n          </CardContent>\n        </Card>\n        <Card sx={{ \n          flex: isXsScreen ? 1 : 'none',\n          width: isSmallScreen ? 160 : 120,\n          bgcolor: '#391E24', \n          color: \"white\", \n          borderRadius: isXsScreen ? \"12px\" : isSmallScreen ? \"16px\" : \"25px\",\n        }}>\n          <CardContent sx={{ \n            p: isXsScreen ? 1.5 : isSmallScreen ? 1.75 : 2,\n            '&:last-child': { pb: isXsScreen ? 1.5 : isSmallScreen ? 1.75 : 2 }\n          }}>\n            <Typography sx={{ \n              fontSize: isXsScreen ? '0.9rem' : isSmallScreen ? '1.1rem' : 26,\n              mb: 0.5\n            }} gutterBottom>\n              Total USD\n              <br />\n              Balance:\n            </Typography>\n            <Typography sx={{ \n              fontSize: isXsScreen ? '1rem' : isSmallScreen ? '1.2rem' : 26\n            }} component=\"div\">\n              $1.9321245\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserSection;","import React from 'react';\r\nimport { Box, Typography, useMediaQuery, useTheme } from '@mui/material';\r\n\r\ninterface DataCardProps {\r\n  title: string;\r\n  value: string;\r\n  isButton?: boolean;\r\n  earnings?: string[];\r\n}\r\n\r\nconst DataCard: React.FC<DataCardProps> = ({ title, value, }) => {\r\n  const theme = useTheme();\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\r\n\r\n  return (\r\n    <Box sx={{\r\n      bgcolor: 'rgba(74,30,42,1)',\r\n      color: 'white',\r\n      borderRadius: isXsScreen ? '16px' : isSmallScreen ? '25px' : '50px',\r\n      height: isXsScreen ? 'auto' : isSmallScreen ? 180 : 250,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      p: isXsScreen ? 2 : isSmallScreen ? 2.5 : 3\r\n    }}>\r\n      <Typography \r\n        component=\"div\" \r\n        sx={{ \r\n          mb: isXsScreen ? 0.5 : 1, \r\n          textAlign: 'center', \r\n          fontSize: isXsScreen ? 24 : isSmallScreen ? 24 : 32,\r\n          lineHeight: 1.2\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography \r\n        sx={{ \r\n          textAlign: 'center', \r\n          fontSize: isXsScreen ? 36 : isSmallScreen ? 48 : 64,\r\n          lineHeight: 1.2\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DataCard;","import React from 'react';\r\nimport { Box, Typography, useMediaQuery, useTheme } from '@mui/material';\r\n\r\ninterface SimpleCardProps {\r\n  title: string;\r\n}\r\n\r\nconst SimpleCard: React.FC<SimpleCardProps> = ({ title }) => {\r\n  const theme = useTheme();\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\r\n\r\n  return (\r\n    <Box sx={{\r\n      backgroundColor: '#391E24',\r\n      color: 'text.primary',\r\n      height: isXsScreen ? 50 : isSmallScreen ? 70 : 140,\r\n      borderRadius: isXsScreen ? '12px' : isSmallScreen ? '25px' : '50px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      p: isXsScreen ? 1 : isSmallScreen ? 1.5 : 2.5\r\n    }}>\r\n      <Typography \r\n        component=\"div\" \r\n        sx={{ \r\n          textAlign: 'center', \r\n          fontSize: isXsScreen ? 24 : isSmallScreen ? 24 : 32,\r\n          lineHeight: 1.2\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;","import React from 'react';\r\nimport { Box, Typography, useMediaQuery, useTheme, SxProps } from '@mui/material';\r\nimport DataCard from './DataCard';\r\nimport SimpleCard from './SimpleCard';\r\n\r\ninterface StatData {\r\n  title: string;\r\n  value: string;\r\n}\r\n\r\nconst cpuStats: StatData[] = [\r\n  { title: \"Total Free CPU\", value: \"6.12354\" },\r\n  { title: \"Total Free CPU\", value: \"6.12354\" },\r\n  { title: \"Total Free CPU\", value: \"6.12354\" },\r\n  { title: \"Total Free CPU\", value: \"6.12354\" }\r\n];\r\n\r\nconst CardSection = () => {\r\n  const theme = useTheme();\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\r\n\r\n  const containerStyles: SxProps = {\r\n    display: 'flex',\r\n    flexDirection: isXsScreen ? 'column' : 'row',\r\n    justifyContent: 'space-between',\r\n    p: isXsScreen ? 1 : isSmallScreen ? 1.5 : 3,\r\n    gap: isXsScreen ? 1.5 : isSmallScreen ? 2 : 3\r\n  };\r\n\r\n  const columnStyles: SxProps = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: isXsScreen ? '100%' : '30%',\r\n    height: isXsScreen ? 'auto' : isSmallScreen ? 400 : 640,\r\n    gap: isXsScreen ? 1 : isSmallScreen ? 1.5 : 3\r\n  };\r\n\r\n  const simpleCardContainerStyles: SxProps = {\r\n    height: isXsScreen ? 'auto' : isSmallScreen ? 180 : 300,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: isXsScreen ? 1 : isSmallScreen ? 1.5 : 3\r\n  };\r\n\r\n  const cpuStatsStyles: SxProps = {\r\n    bgcolor: \"#831F3F\",\r\n    width: isXsScreen ? \"100%\" : \"30%\",\r\n    p: isXsScreen ? 1 : isSmallScreen ? 1.5 : 2,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderRadius: isXsScreen ? '16px' : isSmallScreen ? '25px' : '50px',\r\n    height: isXsScreen ? 'auto' : isSmallScreen ? 400 : 'auto',\r\n    gap: 1\r\n  };\r\n\r\n  const titleStyles: SxProps = {\r\n    fontSize: isXsScreen ? \"24px\" : isSmallScreen ? \"20px\" : \"36px\"\r\n  };\r\n\r\n  const valueStyles: SxProps = {\r\n    fontSize: isXsScreen ? \"32px\" : isSmallScreen ? \"32px\" : \"64px\"\r\n  };\r\n\r\n  return (\r\n    <Box sx={containerStyles}>\r\n      <Box sx={columnStyles}>\r\n        <DataCard title=\"Requested CPU for self total:\" value=\"6.12354\" />\r\n        <DataCard title=\"Requested CPU for self total:\" value=\"6.12354\" />\r\n      </Box>\r\n\r\n      <Box sx={columnStyles}>\r\n        <Box sx={simpleCardContainerStyles}>\r\n          <SimpleCard title=\"Updated Collected Fees\" />\r\n          <SimpleCard title=\"Updated Collected Fees\" />\r\n        </Box>\r\n        <DataCard title=\"Deposited WAX to earn\" value=\"6.12354\" />\r\n      </Box>\r\n\r\n      <Box sx={cpuStatsStyles}>\r\n        {cpuStats.map((stat, index) => (\r\n          <React.Fragment key={index}>\r\n            <Typography sx={titleStyles}>{stat.title}</Typography>\r\n            <Typography sx={valueStyles}>{stat.value}</Typography>\r\n          </React.Fragment>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardSection;","import React from 'react';\r\nimport { Box, Button, Typography, useMediaQuery, useTheme, SxProps } from '@mui/material';\r\n\r\ninterface NavigationButton {\r\n  text: string;\r\n  href: string;\r\n}\r\n\r\nconst buttons: NavigationButton[] = [\r\n  { text: 'GO to Cpu4Sale', href: '/cpu4sale' },\r\n  { text: 'GO to Cpu4Sale', href: '/cpu4sale' }\r\n];\r\n\r\nconst ButtonSection = () => {\r\n  const theme = useTheme();\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.between('sm', 'lg'));\r\n\r\n  const buttonStyles: SxProps = {\r\n    width: isXsScreen ? '100%' : isSmallScreen ? 350 : 500,\r\n    height: isXsScreen ? 60 : isSmallScreen ? 100 : 150,\r\n    borderRadius: isXsScreen ? \"16px\" : isSmallScreen ? \"25px\" : \"50px\",\r\n    bgcolor: '#5C2736',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    px: isXsScreen ? 3 : isSmallScreen ? 5 : 8,\r\n    '&:hover': {\r\n      bgcolor: '#6d2e40'\r\n    }\r\n  };\r\n\r\n  const textStyles: SxProps = {\r\n    color: 'white',\r\n    fontSize: isXsScreen ? 16 : isSmallScreen ? 24 : 32\r\n  };\r\n\r\n  const arrowStyles: SxProps = {\r\n    color: 'white',\r\n    fontSize: isXsScreen ? 24 : isSmallScreen ? 32 : 48\r\n  };\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: isXsScreen ? 'column' : 'row',\r\n      justifyContent: 'space-between',\r\n      p: isXsScreen ? 1 : isSmallScreen ? 2 : 3,\r\n      gap: isXsScreen ? 2 : 3\r\n    }}>\r\n      {buttons.map((button, index) => (\r\n        <Button\r\n          key={index}\r\n          href={button.href}\r\n          sx={buttonStyles}\r\n        >\r\n          <Typography sx={textStyles}>\r\n            {button.text}\r\n          </Typography>\r\n          <Typography sx={arrowStyles}>\r\n            &#62;\r\n          </Typography>\r\n        </Button>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ButtonSection;","import React from 'react';\nimport { Box, useMediaQuery, Link, Theme } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledLink = styled(Link)(({ theme }) => ({\n  color: '#FFFFFF',\n  textDecoration: 'none',\n  fontFamily: 'Roboto',\n}));\n\nconst DashLink = () => {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'));\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: isMobile ? 'column' : 'row',\n        alignItems: isMobile ? 'flex-start' : 'center',\n        justifyContent: 'space-between',\n        padding: isMobile ? 2 : 3,\n        borderRadius: 2,\n        margin: '0 auto',\n        gap: isMobile ? 2 : 0\n      }}\n    >\n      <StyledLink \n        href=\"/\" \n        sx={{ \n          fontSize: isMobile ? 32 : 48, \n          fontWeight: 700,\n          textAlign: isMobile ? 'left' : 'center'\n        }}\n      >\n        Dashboard\n      </StyledLink>\n      <StyledLink \n        sx={{ \n          fontSize: isMobile ? 16 : 24, \n          fontWeight: 300,\n          textAlign: isMobile ? 'left' : 'center'\n        }}\n      >\n        View on wax.block.io\n      </StyledLink>\n    </Box>\n  );\n};\n\nexport default DashLink;","import React from 'react';\r\nimport UserSection from '../components/account/Usersection';\r\nimport CardSection from '../components/account/CardSection';\r\nimport ButtonSection from '../components/account/ButtonSection';\r\nimport DashLink from '../components/account/DashLink';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return (\r\n    <>\r\n      <UserSection />\r\n      <DashLink />\r\n\t    <CardSection />\r\n      <ButtonSection />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport getOverlayAlpha from \"../styles/getOverlayAlpha.js\";\nimport { getPaperUtilityClass } from \"./paperClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  color: (theme.vars || theme).palette.text.primary,\n  transition: theme.transitions.create('box-shadow'),\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.square,\n    style: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'outlined'\n    },\n    style: {\n      border: `1px solid ${(theme.vars || theme).palette.divider}`\n    }\n  }, {\n    props: {\n      variant: 'elevation'\n    },\n    style: {\n      boxShadow: 'var(--Paper-shadow)',\n      backgroundImage: 'var(--Paper-overlay)'\n    }\n  }]\n})));\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    elevation,\n    square,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    style: {\n      ...(variant === 'elevation' && {\n        '--Paper-shadow': (theme.vars || theme).shadows[elevation],\n        ...(theme.vars && {\n          '--Paper-overlay': theme.vars.overlays?.[elevation]\n        }),\n        ...(!theme.vars && theme.palette.mode === 'dark' && {\n          '--Paper-overlay': `linear-gradient(${alpha('#fff', getOverlayAlpha(elevation))}, ${alpha('#fff', getOverlayAlpha(elevation))})`\n        })\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;"],"names":["UserSection","theme","useTheme","isXsScreen","useMediaQuery","breakpoints","down","isSmallScreen","between","_jsxs","Box","sx","display","flexDirection","alignItems","justifyContent","padding","borderRadius","margin","gap","children","width","_jsx","height","bgcolor","flexShrink","Typography","fontSize","ml","align","Card","flex","color","CardContent","p","pb","mb","gutterBottom","component","_ref","title","value","textAlign","lineHeight","backgroundColor","cpuStats","CardSection","containerStyles","columnStyles","simpleCardContainerStyles","cpuStatsStyles","titleStyles","valueStyles","DataCard","SimpleCard","map","stat","index","React","buttons","text","href","ButtonSection","buttonStyles","px","textStyles","arrowStyles","button","Button","StyledLink","styled","Link","textDecoration","fontFamily","DashLink","isMobile","fontWeight","Dashboard","_Fragment","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardContentRoot","name","overridesResolver","props","styles","root","paddingBottom","inProps","ref","useDefaultProps","className","other","ownerState","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","getPaperUtilityClass","PaperRoot","variant","square","rounded","memoTheme","vars","palette","background","paper","primary","transition","transitions","create","variants","_ref2","style","shape","border","divider","boxShadow","backgroundImage","slots","shadows","overlays","mode","alpha","getOverlayAlpha"],"sourceRoot":""}